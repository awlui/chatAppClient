{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///src.js","webpack:///webpack/bootstrap 0dd82393b428e5c21341","webpack:///../node_modules/webpack/buildin/global.js","webpack:///../node_modules/debug/src/browser.js","webpack:///../node_modules/component-emitter/index.js","webpack:///../node_modules/engine.io-parser/lib/browser.js","webpack:///../node_modules/parseqs/index.js","webpack:///../node_modules/component-inherit/index.js","webpack:///../node_modules/socket.io-parser/index.js","webpack:///../node_modules/engine.io-client/lib/xmlhttprequest.js","webpack:///../node_modules/engine.io-client/lib/transport.js","webpack:///../node_modules/parseuri/index.js","webpack:///../node_modules/has-binary2/index.js","webpack:///../node_modules/isarray/index.js","webpack:///../node_modules/socket.io-parser/is-buffer.js","webpack:///../node_modules/socket.io-client/lib/manager.js","webpack:///../node_modules/engine.io-client/lib/transports/index.js","webpack:///../node_modules/engine.io-client/lib/transports/polling.js","webpack:///../node_modules/yeast/index.js","webpack:///../node_modules/indexof/index.js","webpack:///../node_modules/socket.io-client/lib/socket.js","webpack:///../node_modules/socket.io-client/lib/on.js","webpack:///../node_modules/component-bind/index.js","webpack:///./index.ts","webpack:///external \"rxjs\"","webpack:///../node_modules/socket.io-client/lib/index.js","webpack:///../node_modules/socket.io-client/lib/url.js","webpack:///../node_modules/process/browser.js","webpack:///../node_modules/debug/src/debug.js","webpack:///../node_modules/ms/index.js","webpack:///../node_modules/socket.io-parser/binary.js","webpack:///../node_modules/engine.io-client/lib/index.js","webpack:///../node_modules/engine.io-client/lib/socket.js","webpack:///../node_modules/has-cors/index.js","webpack:///../node_modules/engine.io-client/lib/transports/polling-xhr.js","webpack:///../node_modules/engine.io-parser/lib/keys.js","webpack:///../node_modules/arraybuffer.slice/index.js","webpack:///../node_modules/after/index.js","webpack:///../node_modules/engine.io-parser/lib/utf8.js","webpack:///../node_modules/webpack/buildin/module.js","webpack:///../node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","webpack:///../node_modules/blob/index.js","webpack:///../node_modules/engine.io-client/lib/transports/polling-jsonp.js","webpack:///../node_modules/engine.io-client/lib/transports/websocket.js","webpack:///../node_modules/to-array/index.js","webpack:///../node_modules/backo2/index.js"],"names":["root","factory","exports","module","require","define","amd","a","i","this","__WEBPACK_EXTERNAL_MODULE_22__","modules","__webpack_require__","moduleId","installedModules","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","g","Function","eval","e","window","process","useColors","type","document","documentElement","style","WebkitAppearance","console","firebug","exception","table","navigator","userAgent","toLowerCase","match","parseInt","RegExp","$1","formatArgs","args","namespace","humanize","diff","color","splice","index","lastC","replace","log","apply","arguments","save","namespaces","storage","removeItem","debug","load","r","env","DEBUG","chrome","local","localStorage","colors","formatters","j","v","JSON","stringify","err","message","enable","Emitter","obj","mixin","key","on","addEventListener","event","fn","_callbacks","push","once","off","removeListener","removeAllListeners","removeEventListener","length","callbacks","cb","emit","slice","len","listeners","hasListeners","global","encodeBase64Object","packet","callback","packets","data","encodeArrayBuffer","supportsBinary","encodeBase64Packet","contentArray","Uint8Array","resultBuffer","byteLength","buffer","encodeBlobAsArrayBuffer","fr","FileReader","onload","result","encodePacket","readAsArrayBuffer","encodeBlob","dontSendBlobs","Blob","tryDecode","utf8","decode","strict","map","ary","each","done","Array","next","after","el","error","msg","base64encoder","keys","hasBinary","sliceBuffer","ArrayBuffer","isAndroid","test","isPhantomJS","protocol","open","close","ping","pong","upgrade","noop","packetslist","utf8encode","undefined","base64","encoded","encode","String","b64","split","readAsDataURL","b64data","fromCharCode","typed","basic","btoa","decodePacket","binaryType","utf8decode","charAt","decodeBase64Packet","substr","Number","substring","asArray","rest","encodePayload","setLengthHeader","encodeOne","doneCallback","isBinary","encodePayloadAsBlob","encodePayloadAsArrayBuffer","results","join","decodePayload","decodePayloadAsBinary","chr","encodedPackets","totalLength","reduce","acc","toString","resultArray","bufferIndex","forEach","isString","ab","view","charCodeAt","lenStr","binaryIdentifier","size","lengthAry","blob","bufferTail","buffers","tailArray","msgLength","total","str","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","b","constructor","Encoder","encodeAsString","BINARY_EVENT","BINARY_ACK","attachments","nsp","id","encodeAsBinary","writeEncoding","bloblessData","deconstruction","binary","deconstructPacket","pack","unshift","removeBlobs","Decoder","reconstructor","decodeString","types","buf","Error","tryParse","parse","BinaryReconstructor","reconPack","ERROR","hasBin","isBuf","CONNECT","DISCONNECT","EVENT","ACK","add","takeBinaryData","destroy","finishedReconstruction","binData","reconstructPacket","hasCORS","opts","xdomain","xscheme","enablesXDR","XMLHttpRequest","XDomainRequest","concat","Transport","path","hostname","port","secure","query","timestampParam","timestampRequests","readyState","agent","socket","pfx","passphrase","cert","ca","ciphers","rejectUnauthorized","forceNode","extraHeaders","localAddress","parser","onError","desc","description","doOpen","doClose","onClose","send","write","onOpen","writable","onData","onPacket","re","parts","src","indexOf","exec","uri","source","host","authority","ipv6uri","isArray","Buffer","isBuffer","withNativeBlob","withNativeFile","File","toJSON","arr","Manager","nsps","subs","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","Backoff","min","max","jitter","timeout","connecting","lastPing","encoding","packetBuffer","_parser","encoder","decoder","autoConnect","eio","Socket","bind","has","emitAll","updateSocketIds","generateId","engine","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","maybeReconnectOnOpen","reconnecting","attempts","reconnect","connect","self","skipReconnect","openSub","onopen","errorSub","cleanup","timer","setTimeout","clearTimeout","onping","Date","onpong","ondata","ondecoded","onerror","onConnecting","options","processPacketQueue","shift","subsLength","disconnect","reset","onclose","reason","delay","duration","onreconnect","attempt","polling","xd","xs","jsonp","location","isSSL","forceJSONP","XHR","JSONP","websocket","Polling","forceBase64","hasXHR2","parseqs","inherit","yeast","responseType","poll","pause","onPause","doPoll","callbackfn","doWrite","schema","sid","num","alphabet","Math","floor","decoded","now","prev","seed","io","json","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","toArray","events","connect_error","connect_timeout","reconnect_attempt","reconnect_failed","reconnect_error","subEvents","ev","compress","flags","pop","onpacket","onconnect","onevent","onack","ondisconnect","ack","sent","emitBuffered","saveToLocalStorage","endpoint","savedData","getFromLocalStorage","ls","setItem","collection","getItem","value","Rx_1","DataManager","_this","authorized","collSockets","authObservable","Observable","create","_masterHotObservable","Subject","_masterColdObservable","auth","_authenticated","observer","token","wsmessage","_hydrateChatrooms","_unauthorized","_handleSignUp","cs","authSocket","connection","roomInit","_message","init","observable","_connect","_disconnect","_reconnectAttempt","_reconnect","_reconnectError","_reconnectFailed","subscribe","isConnectionAlive","publish","payload","login","username","password","relogin","logout","isPublic","signUp","_a","email","firstName","lastName","createRoom","joinRoom","lookup","parsed","url","sameNamespace","cache","newConnection","forceNew","multiplex","managers","loc","parseuri","ipv6","href","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","run","Item","array","nextTick","title","browser","argv","version","versions","addListener","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","selectColor","hash","abs","createDebug","enabled","curr","ms","prevTime","coerce","format","formatter","val","names","skips","disable","stack","parseFloat","y","h","fmtShort","round","fmtLong","plural","ceil","isNaN","long","_deconstructPacket","placeholder","_placeholder","newData","_reconstructPacket","packetData","_removeBlobs","curKey","containingObject","pendingBlobs","fileReader","transports","transportOptions","writeBuffer","prevBufferLen","policyPort","rememberUpgrade","onlyBinaryUpgrades","perMessageDeflate","threshold","freeGlobal","upgrades","pingInterval","pingTimeout","pingIntervalTimer","pingTimeoutTimer","clone","priorWebsocketSuccess","createTransport","EIO","transport","requestTimeout","protocols","setTransport","onDrain","probe","onTransportOpen","upgradeLosesBinary","failed","upgrading","flush","freezeTransport","onTransportClose","onupgrade","to","onHandshake","setPing","code","filterUpgrades","onHeartbeat","sendPacket","cleanupAndClose","waitForUpgrade","filteredUpgrades","empty","Request","method","async","unloadHandler","requests","abort","request","req","sendXhr","pollXhr","xhr","setDisableHeaderCheck","setRequestHeader","withCredentials","hasXDR","onLoad","responseText","onreadystatechange","contentType","getResponseHeader","status","requestsCount","onSuccess","fromError","response","attachEvent","arraybuffer","start","end","bytes","abv","ii","count","err_cb","proxy","bail","__WEBPACK_AMD_DEFINE_RESULT__","ucs2decode","string","extra","output","counter","ucs2encode","stringFromCharCode","checkScalarValue","codePoint","toUpperCase","createByte","encodeCodePoint","symbol","codePoints","byteString","readContinuationByte","byteIndex","byteCount","continuationByte","byteArray","decodeSymbol","byte1","byte2","byte3","byte4","tmp","freeExports","webpackPolyfill","deprecate","paths","children","chars","encoded1","encoded2","encoded3","encoded4","bufferLength","mapArrayBufferViews","chunk","copy","set","byteOffset","BlobBuilderConstructor","bb","BlobBuilder","append","getBlob","BlobConstructor","WebKitBlobBuilder","MSBlobBuilder","MozBlobBuilder","blobSupported","blobSupportsArrayBufferView","blobBuilderSupported","JSONPPolling","___eio","script","rNewline","rEscapedNewline","parentNode","removeChild","form","iframe","createElement","insertAt","getElementsByTagName","insertBefore","head","body","appendChild","complete","initIframe","html","iframeId","area","className","position","top","left","target","setAttribute","action","submit","WS","usingBrowserWebSocket","BrowserWebSocket","WebSocket","NodeWebSocket","MozWebSocket","check","headers","ws","supports","addEventListeners","onmessage","list","factor","pow","rand","random","deviation"],"mappings":"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","file":"src.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"rxjs\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"rxjs\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"rxjs\")) : factory(root[\"rxjs\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_22__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"rxjs\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"rxjs\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"rxjs\")) : factory(root[\"rxjs\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_22__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 21);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nvar g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process) {/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = __webpack_require__(26);\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(25)))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (true) {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * Module dependencies.\n */\n\nvar keys = __webpack_require__(33);\nvar hasBinary = __webpack_require__(10);\nvar sliceBuffer = __webpack_require__(34);\nvar after = __webpack_require__(35);\nvar utf8 = __webpack_require__(36);\n\nvar base64encoder;\nif (global && global.ArrayBuffer) {\n  base64encoder = __webpack_require__(38);\n}\n\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\nvar dontSendBlobs = isAndroid || isPhantomJS;\n\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = __webpack_require__(39);\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if (typeof utf8encode === 'function') {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = (packet.data === undefined)\n    ? undefined\n    : packet.data.buffer || packet.data;\n\n  if (global.ArrayBuffer && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (Blob && data instanceof global.Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  }\n\n  // might be an object with { base64: true, data: dataAsBase64String }\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n\n/**\n * Encode packet helpers for binary types\n */\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n  resultBuffer[0] = packets[packet.type];\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i+1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n  fr.onload = function() {\n    packet.data = fr.result;\n    exports.encodePacket(packet, supportsBinary, true, callback);\n  };\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n\n  return callback(blob);\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n  if (Blob && packet.data instanceof global.Blob) {\n    var fr = new FileReader();\n    fr.onload = function() {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n  message += global.btoa(b64data);\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  if (data === undefined) {\n    return err;\n  }\n  // String data\n  if (typeof data === 'string') {\n    if (data.charAt(0) === 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      data = tryDecode(data);\n      if (data === false) {\n        return err;\n      }\n    }\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n  return { type: packetslist[type], data: rest };\n};\n\nfunction tryDecode(data) {\n  try {\n    data = utf8.decode(data, { strict: false });\n  } catch (e) {\n    return false;\n  }\n  return data;\n}\n\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  if (!base64encoder) {\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function(i, el, cb) {\n    each(el, function(error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data !== 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n  if (data === '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = '', n, msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (chr !== ':') {\n      length += chr;\n      continue;\n    }\n\n    if (length === '' || (length != (n = Number(length)))) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    msg = data.substr(i + 1, n);\n\n    if (length != msg.length) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    if (msg.length) {\n      packet = exports.decodePacket(msg, binaryType, false);\n\n      if (err.type === packet.type && err.data === packet.data) {\n        // parser error in individual packet - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      var ret = callback(packet, i + n, l);\n      if (false === ret) return;\n    }\n\n    // advance cursor\n    i += n;\n    length = '';\n  }\n\n  if (length !== '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function(err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function(acc, p) {\n      var len;\n      if (typeof p === 'string'){\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n\n    var resultArray = new Uint8Array(totalLength);\n\n    var bufferIndex = 0;\n    encodedPackets.forEach(function(p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n      if (isString) {\n        var view = new Uint8Array(p.length);\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n        ab = view.buffer;\n      }\n\n      if (isString) { // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else { // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n      resultArray[bufferIndex++] = 255;\n\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n\n    return callback(resultArray.buffer);\n  });\n};\n\n/**\n * Encode as Blob\n */\n\nexports.encodePayloadAsBlob = function(packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = (encoded instanceof ArrayBuffer)\n        ? encoded.byteLength\n        : encoded.size;\n\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(new Blob(results));\n  });\n};\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1; ; i++) {\n      if (tailArray[i] === 255) break;\n\n      // 310 = char length of Number.MAX_VALUE\n      if (msgLength.length > 310) {\n        return callback(err, 0, 1);\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function(buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\r\n\r\nexports.encode = function (obj) {\r\n  var str = '';\r\n\r\n  for (var i in obj) {\r\n    if (obj.hasOwnProperty(i)) {\r\n      if (str.length) str += '&';\r\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\r\n    }\r\n  }\r\n\r\n  return str;\r\n};\r\n\r\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\r\n\r\nexports.decode = function(qs){\r\n  var qry = {};\r\n  var pairs = qs.split('&');\r\n  for (var i = 0, l = pairs.length; i < l; i++) {\r\n    var pair = pairs[i].split('=');\r\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n  }\r\n  return qry;\r\n};\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/**\n * Module dependencies.\n */\n\nvar debug = __webpack_require__(1)('socket.io-parser');\nvar Emitter = __webpack_require__(2);\nvar hasBin = __webpack_require__(10);\nvar binary = __webpack_require__(28);\nvar isBuf = __webpack_require__(12);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = 4;\n\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = [\n  'CONNECT',\n  'DISCONNECT',\n  'EVENT',\n  'ACK',\n  'ERROR',\n  'BINARY_EVENT',\n  'BINARY_ACK'\n];\n\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function(obj, callback){\n  if ((obj.type === exports.EVENT || obj.type === exports.ACK) && hasBin(obj.data)) {\n    obj.type = obj.type === exports.EVENT ? exports.BINARY_EVENT : exports.BINARY_ACK;\n  }\n\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    encodeAsBinary(obj, callback);\n  }\n  else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\nfunction encodeAsString(obj) {\n\n  // first is type\n  var str = '' + obj.type;\n\n  // attachments if we have them\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    str += obj.attachments + '-';\n  }\n\n  // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n  if (obj.nsp && '/' !== obj.nsp) {\n    str += obj.nsp + ',';\n  }\n\n  // immediately followed by the id\n  if (null != obj.id) {\n    str += obj.id;\n  }\n\n  // json data\n  if (null != obj.data) {\n    str += JSON.stringify(obj.data);\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\nfunction encodeAsBinary(obj, callback) {\n\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n\n    buffers.unshift(pack); // add packet info to beginning of data list\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n\n/**\n * Mix in `Emitter` with Decoder.\n */\n\nEmitter(Decoder.prototype);\n\n/**\n * Decodes an ecoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function(obj) {\n  var packet;\n  if (typeof obj === 'string') {\n    packet = decodeString(obj);\n    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) { // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet);\n\n      // no attachments, labeled binary but no binary data to follow\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else { // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  }\n  else if (isBuf(obj) || obj.base64) { // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n      if (packet) { // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  }\n  else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\nfunction decodeString(str) {\n  var i = 0;\n  // look up type\n  var p = {\n    type: Number(str.charAt(0))\n  };\n\n  if (null == exports.types[p.type]) return error();\n\n  // look up attachments if type binary\n  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\n    var buf = '';\n    while (str.charAt(++i) !== '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n    if (buf != Number(buf) || str.charAt(i) !== '-') {\n      throw new Error('Illegal attachments');\n    }\n    p.attachments = Number(buf);\n  }\n\n  // look up namespace (if any)\n  if ('/' === str.charAt(i + 1)) {\n    p.nsp = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' === c) break;\n      p.nsp += c;\n      if (i === str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  }\n\n  // look up id\n  var next = str.charAt(i + 1);\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n      p.id += str.charAt(i);\n      if (i === str.length) break;\n    }\n    p.id = Number(p.id);\n  }\n\n  // look up json data\n  if (str.charAt(++i)) {\n    p = tryParse(p, str.substr(i));\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\nfunction tryParse(p, str) {\n  try {\n    p.data = JSON.parse(str);\n  } catch(e){\n    return error();\n  }\n  return p; \n}\n\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function() {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n  this.buffers.push(binData);\n  if (this.buffers.length === this.reconPack.attachments) { // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n  return null;\n};\n\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\nBinaryReconstructor.prototype.finishedReconstruction = function() {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error() {\n  return {\n    type: exports.ERROR,\n    data: 'parser error'\n  };\n}\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// browser shim for xmlhttprequest module\n\nvar hasCORS = __webpack_require__(31);\n\nmodule.exports = function (opts) {\n  var xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  var xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  var enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) { }\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) { }\n\n  if (!xdomain) {\n    try {\n      return new global[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\n    } catch (e) { }\n  }\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Module dependencies.\n */\n\nvar parser = __webpack_require__(3);\nvar Emitter = __webpack_require__(2);\n\n/**\n * Module exports.\n */\n\nmodule.exports = Transport;\n\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport (opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n  this.forceNode = opts.forceNode;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n  this.localAddress = opts.localAddress;\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Transport.prototype);\n\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n\n/**\n * Opens the transport.\n *\n * @api public\n */\n\nTransport.prototype.open = function () {\n  if ('closed' === this.readyState || '' === this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nTransport.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\nTransport.prototype.send = function (packets) {\n  if ('open' === this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n\n/**\n * Called upon open\n *\n * @api private\n */\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\nTransport.prototype.onData = function (data) {\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n\n/**\n * Called with a decoded packet.\n */\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon close.\n *\n * @api private\n */\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n/**\r\n * Parses an URI\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\r\n\r\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\r\nvar parts = [\r\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\r\n];\r\n\r\nmodule.exports = function parseuri(str) {\r\n    var src = str,\r\n        b = str.indexOf('['),\r\n        e = str.indexOf(']');\r\n\r\n    if (b != -1 && e != -1) {\r\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\r\n    }\r\n\r\n    var m = re.exec(str || ''),\r\n        uri = {},\r\n        i = 14;\r\n\r\n    while (i--) {\r\n        uri[parts[i]] = m[i] || '';\r\n    }\r\n\r\n    if (b != -1 && e != -1) {\r\n        uri.source = src;\r\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\r\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\r\n        uri.ipv6uri = true;\r\n    }\r\n\r\n    return uri;\r\n};\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/* global Blob File */\n\n/*\n * Module requirements.\n */\n\nvar isArray = __webpack_require__(11);\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof global.Blob === 'function' || toString.call(global.Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof global.File === 'function' || toString.call(global.File) === '[object FileConstructor]';\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Supports Buffer, ArrayBuffer, Blob and File.\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary (obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n\n  if (isArray(obj)) {\n    for (var i = 0, l = obj.length; i < l; i++) {\n      if (hasBinary(obj[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  if ((typeof global.Buffer === 'function' && global.Buffer.isBuffer && global.Buffer.isBuffer(obj)) ||\n     (typeof global.ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||\n     (withNativeBlob && obj instanceof Blob) ||\n     (withNativeFile && obj instanceof File)\n    ) {\n    return true;\n  }\n\n  // see: https://github.com/Automattic/has-binary/pull/4\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n    return hasBinary(obj.toJSON(), true);\n  }\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\nvar toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {\nmodule.exports = isBuf;\n\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return (global.Buffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer);\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/**\n * Module dependencies.\n */\n\nvar eio = __webpack_require__(29);\nvar Socket = __webpack_require__(18);\nvar Emitter = __webpack_require__(2);\nvar parser = __webpack_require__(6);\nvar on = __webpack_require__(19);\nvar bind = __webpack_require__(20);\nvar debug = __webpack_require__(1)('socket.io-client:manager');\nvar indexOf = __webpack_require__(17);\nvar Backoff = __webpack_require__(44);\n\n/**\n * IE6+ hasOwnProperty\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager (uri, opts) {\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && ('object' === typeof uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n  var _parser = opts.parser || parser;\n  this.encoder = new _parser.Encoder();\n  this.decoder = new _parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function () {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\nManager.prototype.updateSocketIds = function () {\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.generateId(nsp);\n    }\n  }\n};\n\n/**\n * generate `socket.id` for the given `nsp`\n *\n * @param {String} nsp\n * @return {String}\n * @api private\n */\n\nManager.prototype.generateId = function (nsp) {\n  return (nsp === '/' ? '' : (nsp + '#')) + this.engine.id;\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function (v) {\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function (v) {\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function (v) {\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function (v) {\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function (v) {\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function (v) {\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function () {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open =\nManager.prototype.connect = function (fn, opts) {\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false;\n\n  // emit `open`\n  var openSub = on(socket, 'open', function () {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function (data) {\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout);\n\n    // set timer\n    var timer = setTimeout(function () {\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function () {\n  debug('open');\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\nManager.prototype.onping = function () {\n  this.lastPing = new Date();\n  this.emitAll('ping');\n};\n\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\nManager.prototype.onpong = function () {\n  this.emitAll('pong', new Date() - this.lastPing);\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function (data) {\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function (err) {\n  debug('error', err);\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function (nsp, opts) {\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp, opts);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function () {\n      socket.id = self.generateId(nsp);\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting event is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting () {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function (socket) {\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n\n  this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function (packet) {\n  debug('writing packet %j', packet);\n  var self = this;\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function (encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else { // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function () {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function () {\n  debug('cleanup');\n\n  var subsLength = this.subs.length;\n  for (var i = 0; i < subsLength; i++) {\n    var sub = this.subs.shift();\n    sub.destroy();\n  }\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close =\nManager.prototype.disconnect = function () {\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n  if ('opening' === this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function (reason) {\n  debug('onclose');\n\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function () {\n  if (this.reconnecting || this.skipReconnect) return this;\n\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n\n    this.reconnecting = true;\n    var timer = setTimeout(function () {\n      if (self.skipReconnect) return;\n\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts);\n\n      // check again for the case socket closed in above events\n      if (self.skipReconnect) return;\n\n      self.open(function (err) {\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function () {\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * Module dependencies\n */\n\nvar XMLHttpRequest = __webpack_require__(7);\nvar XHR = __webpack_require__(32);\nvar JSONP = __webpack_require__(40);\nvar websocket = __webpack_require__(41);\n\n/**\n * Export transports.\n */\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling (opts) {\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (global.location) {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Module dependencies.\n */\n\nvar Transport = __webpack_require__(8);\nvar parseqs = __webpack_require__(4);\nvar parser = __webpack_require__(3);\nvar inherit = __webpack_require__(5);\nvar yeast = __webpack_require__(16);\nvar debug = __webpack_require__(1)('engine.io-client:polling');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Polling;\n\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = (function () {\n  var XMLHttpRequest = __webpack_require__(7);\n  var xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\nfunction Polling (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(Polling, Transport);\n\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function () {\n  this.poll();\n};\n\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\nPolling.prototype.pause = function (onPause) {\n  var self = this;\n\n  this.readyState = 'pausing';\n\n  function pause () {\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function () {\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function () {\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\nPolling.prototype.poll = function () {\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\nPolling.prototype.onData = function (data) {\n  var self = this;\n  debug('polling got data %s', data);\n  var callback = function (packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' === self.readyState) {\n      self.onOpen();\n    }\n\n    // if its a close packet, we close the ongoing requests\n    if ('close' === packet.type) {\n      self.onClose();\n      return false;\n    }\n\n    // otherwise bypass onData and handle the message\n    self.onPacket(packet);\n  };\n\n  // decode payload\n  parser.decodePayload(data, this.socket.binaryType, callback);\n\n  // if an event did not trigger closing\n  if ('closed' !== this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' === this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function () {\n  var self = this;\n\n  function close () {\n    debug('writing close packet');\n    self.write([{ type: 'close' }]);\n  }\n\n  if ('open' === this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\nPolling.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n  var callbackfn = function () {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nPolling.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = '';\n\n  // cache busting is forced\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // avoid port if default for schema\n  if (this.port && (('https' === schema && Number(this.port) !== 443) ||\n     ('http' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/**\n * Module dependencies.\n */\n\nvar parser = __webpack_require__(6);\nvar Emitter = __webpack_require__(2);\nvar toArray = __webpack_require__(43);\nvar on = __webpack_require__(19);\nvar bind = __webpack_require__(20);\nvar debug = __webpack_require__(1)('socket.io-client:socket');\nvar parseqs = __webpack_require__(4);\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket (io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n  if (this.io.autoConnect) this.open();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  if (this.subs) return;\n\n  var io = this.io;\n  this.subs = [\n    on(io, 'open', bind(this, 'onopen')),\n    on(io, 'packet', bind(this, 'onpacket')),\n    on(io, 'close', bind(this, 'onclose'))\n  ];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open =\nSocket.prototype.connect = function () {\n  if (this.connected) return this;\n\n  this.subEvents();\n  this.io.open(); // ensure open\n  if ('open' === this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var packet = { type: parser.EVENT, data: args };\n\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress;\n\n  // event ack callback\n  if ('function' === typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  delete this.flags;\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function () {\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' !== this.nsp) {\n    if (this.query) {\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\n      debug('sending connect packet with query %s', query);\n      this.packet({type: parser.CONNECT, query: query});\n    } else {\n      this.packet({type: parser.CONNECT});\n    }\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function (reason) {\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function (packet) {\n  if (packet.nsp !== this.nsp) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n\n    self.packet({\n      type: parser.ACK,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n  if ('function' === typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function () {\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function () {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close =\nSocket.prototype.disconnect = function () {\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({ type: parser.DISCONNECT });\n  }\n\n  // remove socket from pool\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.compress = function (compress) {\n  this.flags = this.flags || {};\n  this.flags.compress = compress;\n  return this;\n};\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports) {\n\n\n/**\n * Module exports.\n */\n\nmodule.exports = on;\n\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on (obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function () {\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\n/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Rx_1 = __webpack_require__(22);\nvar io = __webpack_require__(23);\nvar DataManager = /** @class */ (function () {\n    function DataManager(options) {\n        var _this = this;\n        this.options = options;\n        this.authorized = false;\n        this.collSockets = {};\n        this.authObservable = Rx_1.Observable.create(function () { });\n        this._masterHotObservable = new Rx_1.Subject();\n        this._masterColdObservable = Rx_1.Observable.create(function () { });\n        this.auth = function () {\n            function _authenticated(observer, e) {\n                // if (e) {\n                //   this.authToken = e.token;\n                // }\n                // this.authorized = true;\n                var token = e.token;\n                this.collSockets['chatrooms'].emit('joinRooms', { token: token });\n                observer.next({\n                    name: 'authenticated',\n                    wsmessage: {\n                        token: token\n                    }\n                });\n                this._hydrateChatrooms();\n            }\n            function _unauthorized(observer, e) {\n                observer.next({\n                    name: 'unauthorized'\n                });\n            }\n            function _handleSignUp(observer, data) {\n                console.log(data, 'data');\n            }\n            var cs = _this.collSockets;\n            var authSocket = io(_this.connection + \"/auth\");\n            cs['auth'] = authSocket;\n            var observable = Rx_1.Observable.create(function (observer) {\n                authSocket.on('authenticated', _authenticated.bind(_this, observer));\n                authSocket.on('unauthorized', _unauthorized.bind(_this, observer));\n                authSocket.on('signup-response', _handleSignUp.bind(_this, observer));\n            });\n            return observable;\n        };\n        this.roomInit = function () {\n            _this.collSockets['chatrooms'] = io(_this.connection + \"/chatrooms\");\n            var observable = Rx_1.Observable.create(function (observer) {\n                _this.collSockets['chatrooms'].on('message', _this._message.bind(_this, observer));\n            });\n            return observable;\n        };\n        this.init = function () {\n            _this.Socket = io(_this.connection + \"/\");\n            var observable = Rx_1.Observable.create(function (observer) {\n                _this.Socket.on('message', _this._message.bind(_this, observer));\n                _this.Socket.on('connect', _this._connect.bind(_this, observer));\n                _this.Socket.on('disconnect', _this._disconnect.bind(_this, observer));\n                _this.Socket.on('reconnect_attempt', _this._reconnectAttempt.bind(_this, observer));\n                _this.Socket.on('reconnect', _this._reconnect.bind(_this, observer));\n                _this.Socket.on('reconnect_error', _this._reconnectError.bind(_this, observer));\n                _this.Socket.on('reconnect_failed', _this._reconnectFailed.bind(_this, observer));\n            });\n            _this._masterColdObservable = observable;\n            observable.subscribe(_this._masterHotObservable);\n            _this.roomInit().subscribe(_this._masterHotObservable);\n            _this.auth().subscribe(_this._masterHotObservable);\n            // this.hydrateChatroomObservable.subscribe(this._masterHotObservable);\n            // this.collSockets['auth'].emit('authentication', {username: 'mpan', password: 'password3'});\n        };\n        this._message = function (observer, data) {\n            observer.next({\n                name: 'message',\n                wsmessage: data\n            });\n        };\n        this._connect = function (observer) {\n            _this.isConnectionAlive = true;\n            observer.next({\n                name: 'connect'\n            });\n        };\n        this._disconnect = function (observer) {\n            observer.next({\n                name: 'disconnect'\n            });\n        };\n        this._reconnectAttempt = function (observer) {\n            observer.next({\n                name: 'reconnect attempt'\n            });\n        };\n        this._reconnect = function (observer) {\n            // this.collSockets['auth'].emit('authentication', { token: this.authToken });\n            observer.next({\n                name: 'reconnected'\n            });\n        };\n        this._reconnectError = function (observer) {\n            observer.next({\n                name: 'reconnect error'\n            });\n        };\n        this._reconnectFailed = function (observer) {\n            observer.next({\n                name: 'reconnect failed'\n            });\n        };\n        this._hydrateChatrooms = function () {\n            _this.publish('chatrooms', 'hydrateChatrooms');\n            var observable = Rx_1.Observable.create(function (observer) {\n                _this.collSockets['chatrooms'].once('hydrateChatrooms', function (payload) {\n                    observer.next({\n                        name: 'chatroom-hydration',\n                        wsmessage: payload\n                    });\n                });\n            });\n            observable.subscribe(_this._masterHotObservable);\n        };\n        this.login = function (username, password) {\n            _this.collSockets['auth'].emit('authentication', { username: username, password: password });\n        };\n        this.relogin = function (token) {\n            _this.collSockets['auth'].emit('authentication', { token: token });\n        };\n        this.logout = function () {\n            // this.authToken = null;\n            // this.authorized = false;\n            var observable = Rx_1.Observable.create(function (observer) {\n                observer.next({\n                    name: 'logout'\n                });\n            });\n            observable.subscribe(_this._masterHotObservable);\n        };\n        this.publish = function (socket, endpoint, data, isPublic) {\n            // let payload = {\n            //   ...data, token: this.authToken\n            // }\n            if (_this.isConnectionAlive && ((data && data.token) || !!isPublic)) {\n                _this.collSockets[socket].emit(endpoint, data);\n            }\n            else if (!_this.isConnectionAlive && data.token) {\n                saveToLocalStorage(socket, endpoint, data);\n            }\n        };\n        this.signUp = function (_a) {\n            var username = _a.username, password = _a.password, email = _a.email, firstName = _a.firstName, lastName = _a.lastName;\n            _this.publish('auth', 'signup', {\n                username: username,\n                password: password,\n                email: email,\n                firstName: firstName,\n                lastName: lastName\n            }, true);\n        };\n        this.createRoom = function () {\n        };\n        this.joinRoom = function () {\n        };\n        this.connection = options.connection;\n        this.isConnectionAlive = false;\n        this.init();\n    }\n    Object.defineProperty(DataManager.prototype, \"masterObservable\", {\n        get: function () {\n            return this._masterHotObservable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DataManager;\n}());\nexports.DataManager = DataManager;\nfunction saveToLocalStorage(socket, endpoint, data) {\n    var savedData = getFromLocalStorage(endpoint);\n    var ls = savedData || [];\n    ls.push(data);\n    localStorage.setItem(endpoint, JSON.stringify(ls));\n}\nfunction clearCollection(collection) {\n    localStorage.setItem(collection, null);\n}\nfunction getFromLocalStorage(collection) {\n    return JSON.parse(localStorage.getItem(collection));\n}\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_22__;\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/**\n * Module dependencies.\n */\n\nvar url = __webpack_require__(24);\nvar parser = __webpack_require__(6);\nvar Manager = __webpack_require__(13);\nvar debug = __webpack_require__(1)('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup (uri, opts) {\n  if (typeof uri === 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] ||\n                      false === opts.multiplex || sameNamespace;\n\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n  if (parsed.query && !opts.query) {\n    opts.query = parsed.query;\n  }\n  return io.socket(parsed.path, opts);\n}\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = __webpack_require__(13);\nexports.Socket = __webpack_require__(18);\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {\n/**\n * Module dependencies.\n */\n\nvar parseuri = __webpack_require__(9);\nvar debug = __webpack_require__(1)('socket.io-client:url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = url;\n\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url (uri, loc) {\n  var obj = uri;\n\n  // default to window.location\n  loc = loc || global.location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n  // relative path support\n  if ('string' === typeof uri) {\n    if ('/' === uri.charAt(0)) {\n      if ('/' === uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n      if ('undefined' !== typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    }\n\n    // parse\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  }\n\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n  // define unique id\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n  // define href\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\n\n  return obj;\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = __webpack_require__(27);\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports) {\n\n/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = __webpack_require__(11);\nvar isBuf = __webpack_require__(12);\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof global.Blob === 'function' || toString.call(global.Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof global.File === 'function' || toString.call(global.File) === '[object FileConstructor]';\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet) {\n  var buffers = [];\n  var packetData = packet.data;\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData, buffers);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\nfunction _deconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (isBuf(data)) {\n    var placeholder = { _placeholder: true, num: buffers.length };\n    buffers.push(data);\n    return placeholder;\n  } else if (isArray(data)) {\n    var newData = new Array(data.length);\n    for (var i = 0; i < data.length; i++) {\n      newData[i] = _deconstructPacket(data[i], buffers);\n    }\n    return newData;\n  } else if (typeof data === 'object' && !(data instanceof Date)) {\n    var newData = {};\n    for (var key in data) {\n      newData[key] = _deconstructPacket(data[key], buffers);\n    }\n    return newData;\n  }\n  return data;\n}\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  packet.data = _reconstructPacket(packet.data, buffers);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\nfunction _reconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (data && data._placeholder) {\n    return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n  } else if (isArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      data[i] = _reconstructPacket(data[i], buffers);\n    }\n  } else if (typeof data === 'object') {\n    for (var key in data) {\n      data[key] = _reconstructPacket(data[key], buffers);\n    }\n  }\n\n  return data;\n}\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (typeof obj === 'object' && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\nmodule.exports = __webpack_require__(30);\n\n/**\n * Exports parser\n *\n * @api public\n *\n */\nmodule.exports.parser = __webpack_require__(3);\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * Module dependencies.\n */\n\nvar transports = __webpack_require__(14);\nvar Emitter = __webpack_require__(2);\nvar debug = __webpack_require__(1)('engine.io-client:socket');\nvar index = __webpack_require__(17);\nvar parser = __webpack_require__(3);\nvar parseuri = __webpack_require__(9);\nvar parseqs = __webpack_require__(4);\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket (uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n  opts = opts || {};\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure\n    : (global.location && 'https:' === location.protocol);\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname ||\n    (global.location ? location.hostname : 'localhost');\n  this.port = opts.port || (global.location && location.port\n      ? location.port\n      : (this.secure ? 443 : 80));\n  this.query = opts.query || {};\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.transportOptions = opts.transportOptions || {};\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.prevBufferLen = 0;\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  }\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n  this.forceNode = !!opts.forceNode;\n\n  // other options for Node.js client\n  var freeGlobal = typeof global === 'object' && global;\n  if (freeGlobal.global === freeGlobal) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n\n    if (opts.localAddress) {\n      this.localAddress = opts.localAddress;\n    }\n  }\n\n  // set on handshake\n  this.id = null;\n  this.upgrades = null;\n  this.pingInterval = null;\n  this.pingTimeout = null;\n\n  // set on heartbeat\n  this.pingIntervalTimer = null;\n  this.pingTimeoutTimer = null;\n\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = __webpack_require__(8);\nSocket.transports = __webpack_require__(14);\nSocket.parser = __webpack_require__(3);\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // per-transport options\n  var options = this.transportOptions[name] || {};\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n\n  var transport = new transports[name]({\n    query: query,\n    socket: this,\n    agent: options.agent || this.agent,\n    hostname: options.hostname || this.hostname,\n    port: options.port || this.port,\n    secure: options.secure || this.secure,\n    path: options.path || this.path,\n    forceJSONP: options.forceJSONP || this.forceJSONP,\n    jsonp: options.jsonp || this.jsonp,\n    forceBase64: options.forceBase64 || this.forceBase64,\n    enablesXDR: options.enablesXDR || this.enablesXDR,\n    timestampRequests: options.timestampRequests || this.timestampRequests,\n    timestampParam: options.timestampParam || this.timestampParam,\n    policyPort: options.policyPort || this.policyPort,\n    pfx: options.pfx || this.pfx,\n    key: options.key || this.key,\n    passphrase: options.passphrase || this.passphrase,\n    cert: options.cert || this.cert,\n    ca: options.ca || this.ca,\n    ciphers: options.ciphers || this.ciphers,\n    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\n    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\n    extraHeaders: options.extraHeaders || this.extraHeaders,\n    forceNode: options.forceNode || this.forceNode,\n    localAddress: options.localAddress || this.localAddress,\n    requestTimeout: options.requestTimeout || this.requestTimeout,\n    protocols: options.protocols || void (0)\n  });\n\n  return transport;\n};\n\nfunction clone (obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function () {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function (transport) {\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport\n  .on('drain', function () {\n    self.onDrain();\n  })\n  .on('packet', function (packet) {\n    self.onPacket(packet);\n  })\n  .on('error', function (e) {\n    self.onError(e);\n  })\n  .on('close', function () {\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, { probe: 1 });\n  var failed = false;\n  var self = this;\n\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen () {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{ type: 'ping', data: 'probe' }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' === msg.type && 'probe' === msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' === self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n\n          cleanup();\n\n          self.setTransport(transport);\n          transport.send([{ type: 'upgrade' }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport () {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n\n    cleanup();\n\n    transport.close();\n    transport = null;\n  }\n\n  // Handle any error that happens while probing\n  function onerror (err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n\n    freezeTransport();\n\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose () {\n    onerror('transport closed');\n  }\n\n  // When the socket is closed while we're probing\n  function onclose () {\n    onerror('socket closed');\n  }\n\n  // When the socket is upgraded while we're probing\n  function onupgrade (to) {\n    if (transport && to.name !== transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  }\n\n  // Remove all listeners on the transport and on self\n  function cleanup () {\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n\n  transport.open();\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' === this.readyState || 'open' === this.readyState ||\n      'closing' === this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(JSON.parse(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if ('closed' === this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' === self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || (self.pingInterval + self.pingTimeout));\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function () {\n    self.emit('ping');\n  });\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function () {\n  this.writeBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' !== this.readyState && this.transport.writable &&\n    !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write =\nSocket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' === typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing';\n\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function () {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close () {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose () {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade () {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n\n    // clean buffers after, so users can still\n    // grab the buffers on `close` event\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports) {\n\n\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * Module requirements.\n */\n\nvar XMLHttpRequest = __webpack_require__(7);\nvar Polling = __webpack_require__(15);\nvar Emitter = __webpack_require__(2);\nvar inherit = __webpack_require__(5);\nvar debug = __webpack_require__(1)('engine.io-client:polling-xhr');\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n/**\n * Empty function\n */\n\nfunction empty () {}\n\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction XHR (opts) {\n  Polling.call(this, opts);\n  this.requestTimeout = opts.requestTimeout;\n  this.extraHeaders = opts.extraHeaders;\n\n  if (global.location) {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = opts.hostname !== global.location.hostname ||\n      port !== opts.port;\n    this.xs = opts.secure !== isSSL;\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling);\n\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function (opts) {\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  opts.requestTimeout = this.requestTimeout;\n\n  // other options for Node.js client\n  opts.extraHeaders = this.extraHeaders;\n\n  return new Request(opts);\n};\n\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\nXHR.prototype.doWrite = function (data, fn) {\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function (err) {\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nXHR.prototype.doPoll = function () {\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function (data) {\n    self.onData(data);\n  });\n  req.on('error', function (err) {\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Request (opts) {\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined !== opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n  this.requestTimeout = opts.requestTimeout;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n\n  this.create();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function () {\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n\n    if ('POST' === this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    try {\n      xhr.setRequestHeader('Accept', '*/*');\n    } catch (e) {}\n\n    // ie6 check\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    if (this.requestTimeout) {\n      xhr.timeout = this.requestTimeout;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function () {\n        self.onLoad();\n      };\n      xhr.onerror = function () {\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 2) {\n          var contentType;\n          try {\n            contentType = xhr.getResponseHeader('Content-Type');\n          } catch (e) {}\n          if (contentType === 'application/octet-stream') {\n            xhr.responseType = 'arraybuffer';\n          }\n        }\n        if (4 !== xhr.readyState) return;\n        if (200 === xhr.status || 1223 === xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function () {\n            self.onError(xhr.status);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function () {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (global.document) {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function () {\n  this.emit('success');\n  this.cleanup();\n};\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function (data) {\n  this.emit('data', data);\n  this.onSuccess();\n};\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function (err) {\n  this.emit('error', err);\n  this.cleanup(true);\n};\n\n/**\n * Cleans up house.\n *\n * @api private\n */\n\nRequest.prototype.cleanup = function (fromError) {\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\n    return;\n  }\n  // xmlhttprequest\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch (e) {}\n  }\n\n  if (global.document) {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function () {\n  var data;\n  try {\n    var contentType;\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type');\n    } catch (e) {}\n    if (contentType === 'application/octet-stream') {\n      data = this.xhr.response || this.xhr.responseText;\n    } else {\n      data = this.xhr.responseText;\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n  if (null != data) {\n    this.onData(data);\n  }\n};\n\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\nRequest.prototype.hasXDR = function () {\n  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n};\n\n/**\n * Aborts the request.\n *\n * @api public\n */\n\nRequest.prototype.abort = function () {\n  this.cleanup();\n};\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (global.document) {\n  if (global.attachEvent) {\n    global.attachEvent('onunload', unloadHandler);\n  } else if (global.addEventListener) {\n    global.addEventListener('beforeunload', unloadHandler, false);\n  }\n}\n\nfunction unloadHandler () {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports) {\n\n\n/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\n\nmodule.exports = Object.keys || function keys (obj){\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n  return arr;\n};\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports) {\n\n/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\n\nmodule.exports = function(arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\n  if (start < 0) { start += bytes; }\n  if (end < 0) { end += bytes; }\n  if (end > bytes) { end = bytes; }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n  return result.buffer;\n};\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports) {\n\nmodule.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! https://mths.be/utf8js v2.1.2 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint, strict) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tif (strict) {\n\t\t\t\tthrow Error(\n\t\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t\t' is not a scalar value'\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint, strict) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tif (!checkScalarValue(codePoint, strict)) {\n\t\t\t\tcodePoint = 0xFFFD;\n\t\t\t}\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string, opts) {\n\t\topts = opts || {};\n\t\tvar strict = false !== opts.strict;\n\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint, strict);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol(strict) {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\treturn checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString, opts) {\n\t\topts = opts || {};\n\t\tvar strict = false !== opts.strict;\n\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol(strict)) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar utf8 = {\n\t\t'version': '2.1.2',\n\t\t'encode': utf8encode,\n\t\t'decode': utf8decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttrue\n\t) {\n\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\treturn utf8;\n\t\t}.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = utf8;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tvar object = {};\n\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\tfor (var key in utf8) {\n\t\t\t\thasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.utf8 = utf8;\n\t}\n\n}(this));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(37)(module), __webpack_require__(0)))\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif(!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports) {\n\n/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(){\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n  // Use a lookup table to find the index.\n  var lookup = new Uint8Array(256);\n  for (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i+1)];\n      encoded3 = lookup[base64.charCodeAt(i+2)];\n      encoded4 = lookup[base64.charCodeAt(i+3)];\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})();\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * Create a blob builder even when vendor prefixes exist\n */\n\nvar BlobBuilder = global.BlobBuilder\n  || global.WebKitBlobBuilder\n  || global.MSBlobBuilder\n  || global.MozBlobBuilder;\n\n/**\n * Check if Blob constructor is supported\n */\n\nvar blobSupported = (function() {\n  try {\n    var a = new Blob(['hi']);\n    return a.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if Blob constructor supports ArrayBufferViews\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\n */\n\nvar blobSupportsArrayBufferView = blobSupported && (function() {\n  try {\n    var b = new Blob([new Uint8Array([1,2])]);\n    return b.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if BlobBuilder is supported\n */\n\nvar blobBuilderSupported = BlobBuilder\n  && BlobBuilder.prototype.append\n  && BlobBuilder.prototype.getBlob;\n\n/**\n * Helper function that maps ArrayBufferViews to ArrayBuffers\n * Used by BlobBuilder constructor and old browsers that didn't\n * support it in the Blob constructor.\n */\n\nfunction mapArrayBufferViews(ary) {\n  for (var i = 0; i < ary.length; i++) {\n    var chunk = ary[i];\n    if (chunk.buffer instanceof ArrayBuffer) {\n      var buf = chunk.buffer;\n\n      // if this is a subarray, make a copy so we only\n      // include the subarray region from the underlying buffer\n      if (chunk.byteLength !== buf.byteLength) {\n        var copy = new Uint8Array(chunk.byteLength);\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n        buf = copy.buffer;\n      }\n\n      ary[i] = buf;\n    }\n  }\n}\n\nfunction BlobBuilderConstructor(ary, options) {\n  options = options || {};\n\n  var bb = new BlobBuilder();\n  mapArrayBufferViews(ary);\n\n  for (var i = 0; i < ary.length; i++) {\n    bb.append(ary[i]);\n  }\n\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\n};\n\nfunction BlobConstructor(ary, options) {\n  mapArrayBufferViews(ary);\n  return new Blob(ary, options || {});\n};\n\nmodule.exports = (function() {\n  if (blobSupported) {\n    return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;\n  } else if (blobBuilderSupported) {\n    return BlobBuilderConstructor;\n  } else {\n    return undefined;\n  }\n})();\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {\n/**\n * Module requirements.\n */\n\nvar Polling = __webpack_require__(15);\nvar inherit = __webpack_require__(5);\n\n/**\n * Module exports.\n */\n\nmodule.exports = JSONPPolling;\n\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n\n/**\n * Noop.\n */\n\nfunction empty () { }\n\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\nfunction JSONPPolling (opts) {\n  Polling.call(this, opts);\n\n  this.query = this.query || {};\n\n  // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    if (!global.___eio) global.___eio = [];\n    callbacks = global.___eio;\n  }\n\n  // callback identifier\n  this.index = callbacks.length;\n\n  // add callback to jsonp global\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  });\n\n  // append to query string\n  this.query.j = this.index;\n\n  // prevent spurious errors from being emitted when the window is unloaded\n  if (global.document && global.addEventListener) {\n    global.addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(JSONPPolling, Polling);\n\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n  script.onerror = function (e) {\n    self.onError('jsonp poll error', e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n  if (insertAt) {\n    insertAt.parentNode.insertBefore(script, insertAt);\n  } else {\n    (document.head || document.body).appendChild(script);\n  }\n  this.script = script;\n\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete () {\n    initIframe();\n    fn();\n  }\n\n  function initIframe () {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe();\n\n  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch (e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function () {\n      if (self.iframe.readyState === 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * Module dependencies.\n */\n\nvar Transport = __webpack_require__(8);\nvar parser = __webpack_require__(3);\nvar parseqs = __webpack_require__(4);\nvar inherit = __webpack_require__(5);\nvar yeast = __webpack_require__(16);\nvar debug = __webpack_require__(1)('engine.io-client:websocket');\nvar BrowserWebSocket = global.WebSocket || global.MozWebSocket;\nvar NodeWebSocket;\nif (typeof window === 'undefined') {\n  try {\n    NodeWebSocket = __webpack_require__(42);\n  } catch (e) { }\n}\n\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\nvar WebSocket = BrowserWebSocket;\nif (!WebSocket && typeof window === 'undefined') {\n  WebSocket = NodeWebSocket;\n}\n\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n  this.perMessageDeflate = opts.perMessageDeflate;\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\n  this.protocols = opts.protocols;\n  if (!this.usingBrowserWebSocket) {\n    WebSocket = NodeWebSocket;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport);\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function () {\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var uri = this.uri();\n  var protocols = this.protocols;\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate\n  };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n  if (this.localAddress) {\n    opts.localAddress = this.localAddress;\n  }\n\n  try {\n    this.ws = this.usingBrowserWebSocket ? (protocols ? new WebSocket(uri, protocols) : new WebSocket(uri)) : new WebSocket(uri, protocols, opts);\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'nodebuffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function () {\n  var self = this;\n\n  this.ws.onopen = function () {\n    self.onOpen();\n  };\n  this.ws.onclose = function () {\n    self.onClose();\n  };\n  this.ws.onmessage = function (ev) {\n    self.onData(ev.data);\n  };\n  this.ws.onerror = function (e) {\n    self.onError('websocket error', e);\n  };\n};\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n\n  // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n  var total = packets.length;\n  for (var i = 0, l = total; i < l; i++) {\n    (function (packet) {\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\n        if (!self.usingBrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' === typeof data ? global.Buffer.byteLength(data) : data.length;\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n        try {\n          if (self.usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done () {\n    self.emit('flush');\n\n    // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n    setTimeout(function () {\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function () {\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function () {\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = '';\n\n  // avoid port if default for schema\n  if (this.port && (('wss' === schema && Number(this.port) !== 443) ||\n    ('ws' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\nWS.prototype.check = function () {\n  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports) {\n\n/* (ignored) */\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports) {\n\nmodule.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports) {\n\n\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// src.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0dd82393b428e5c21341","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/webpack/buildin/global.js\n// module id = 0\n// module chunks = 0","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/debug/src/browser.js\n// module id = 1\n// module chunks = 0","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/component-emitter/index.js\n// module id = 2\n// module chunks = 0","/**\n * Module dependencies.\n */\n\nvar keys = require('./keys');\nvar hasBinary = require('has-binary2');\nvar sliceBuffer = require('arraybuffer.slice');\nvar after = require('after');\nvar utf8 = require('./utf8');\n\nvar base64encoder;\nif (global && global.ArrayBuffer) {\n  base64encoder = require('base64-arraybuffer');\n}\n\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\nvar dontSendBlobs = isAndroid || isPhantomJS;\n\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if (typeof utf8encode === 'function') {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = (packet.data === undefined)\n    ? undefined\n    : packet.data.buffer || packet.data;\n\n  if (global.ArrayBuffer && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (Blob && data instanceof global.Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  }\n\n  // might be an object with { base64: true, data: dataAsBase64String }\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n\n/**\n * Encode packet helpers for binary types\n */\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n  resultBuffer[0] = packets[packet.type];\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i+1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n  fr.onload = function() {\n    packet.data = fr.result;\n    exports.encodePacket(packet, supportsBinary, true, callback);\n  };\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n\n  return callback(blob);\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n  if (Blob && packet.data instanceof global.Blob) {\n    var fr = new FileReader();\n    fr.onload = function() {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n  message += global.btoa(b64data);\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  if (data === undefined) {\n    return err;\n  }\n  // String data\n  if (typeof data === 'string') {\n    if (data.charAt(0) === 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      data = tryDecode(data);\n      if (data === false) {\n        return err;\n      }\n    }\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n  return { type: packetslist[type], data: rest };\n};\n\nfunction tryDecode(data) {\n  try {\n    data = utf8.decode(data, { strict: false });\n  } catch (e) {\n    return false;\n  }\n  return data;\n}\n\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  if (!base64encoder) {\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function(i, el, cb) {\n    each(el, function(error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data !== 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n  if (data === '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = '', n, msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (chr !== ':') {\n      length += chr;\n      continue;\n    }\n\n    if (length === '' || (length != (n = Number(length)))) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    msg = data.substr(i + 1, n);\n\n    if (length != msg.length) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    if (msg.length) {\n      packet = exports.decodePacket(msg, binaryType, false);\n\n      if (err.type === packet.type && err.data === packet.data) {\n        // parser error in individual packet - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      var ret = callback(packet, i + n, l);\n      if (false === ret) return;\n    }\n\n    // advance cursor\n    i += n;\n    length = '';\n  }\n\n  if (length !== '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function(err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function(acc, p) {\n      var len;\n      if (typeof p === 'string'){\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n\n    var resultArray = new Uint8Array(totalLength);\n\n    var bufferIndex = 0;\n    encodedPackets.forEach(function(p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n      if (isString) {\n        var view = new Uint8Array(p.length);\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n        ab = view.buffer;\n      }\n\n      if (isString) { // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else { // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n      resultArray[bufferIndex++] = 255;\n\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n\n    return callback(resultArray.buffer);\n  });\n};\n\n/**\n * Encode as Blob\n */\n\nexports.encodePayloadAsBlob = function(packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = (encoded instanceof ArrayBuffer)\n        ? encoded.byteLength\n        : encoded.size;\n\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(new Blob(results));\n  });\n};\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1; ; i++) {\n      if (tailArray[i] === 255) break;\n\n      // 310 = char length of Number.MAX_VALUE\n      if (msgLength.length > 310) {\n        return callback(err, 0, 1);\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function(buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/engine.io-parser/lib/browser.js\n// module id = 3\n// module chunks = 0","/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\r\n\r\nexports.encode = function (obj) {\r\n  var str = '';\r\n\r\n  for (var i in obj) {\r\n    if (obj.hasOwnProperty(i)) {\r\n      if (str.length) str += '&';\r\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\r\n    }\r\n  }\r\n\r\n  return str;\r\n};\r\n\r\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\r\n\r\nexports.decode = function(qs){\r\n  var qry = {};\r\n  var pairs = qs.split('&');\r\n  for (var i = 0, l = pairs.length; i < l; i++) {\r\n    var pair = pairs[i].split('=');\r\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n  }\r\n  return qry;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/parseqs/index.js\n// module id = 4\n// module chunks = 0","\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/component-inherit/index.js\n// module id = 5\n// module chunks = 0","\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar hasBin = require('has-binary2');\nvar binary = require('./binary');\nvar isBuf = require('./is-buffer');\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = 4;\n\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = [\n  'CONNECT',\n  'DISCONNECT',\n  'EVENT',\n  'ACK',\n  'ERROR',\n  'BINARY_EVENT',\n  'BINARY_ACK'\n];\n\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function(obj, callback){\n  if ((obj.type === exports.EVENT || obj.type === exports.ACK) && hasBin(obj.data)) {\n    obj.type = obj.type === exports.EVENT ? exports.BINARY_EVENT : exports.BINARY_ACK;\n  }\n\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    encodeAsBinary(obj, callback);\n  }\n  else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\nfunction encodeAsString(obj) {\n\n  // first is type\n  var str = '' + obj.type;\n\n  // attachments if we have them\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    str += obj.attachments + '-';\n  }\n\n  // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n  if (obj.nsp && '/' !== obj.nsp) {\n    str += obj.nsp + ',';\n  }\n\n  // immediately followed by the id\n  if (null != obj.id) {\n    str += obj.id;\n  }\n\n  // json data\n  if (null != obj.data) {\n    str += JSON.stringify(obj.data);\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\nfunction encodeAsBinary(obj, callback) {\n\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n\n    buffers.unshift(pack); // add packet info to beginning of data list\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n\n/**\n * Mix in `Emitter` with Decoder.\n */\n\nEmitter(Decoder.prototype);\n\n/**\n * Decodes an ecoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function(obj) {\n  var packet;\n  if (typeof obj === 'string') {\n    packet = decodeString(obj);\n    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) { // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet);\n\n      // no attachments, labeled binary but no binary data to follow\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else { // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  }\n  else if (isBuf(obj) || obj.base64) { // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n      if (packet) { // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  }\n  else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\nfunction decodeString(str) {\n  var i = 0;\n  // look up type\n  var p = {\n    type: Number(str.charAt(0))\n  };\n\n  if (null == exports.types[p.type]) return error();\n\n  // look up attachments if type binary\n  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\n    var buf = '';\n    while (str.charAt(++i) !== '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n    if (buf != Number(buf) || str.charAt(i) !== '-') {\n      throw new Error('Illegal attachments');\n    }\n    p.attachments = Number(buf);\n  }\n\n  // look up namespace (if any)\n  if ('/' === str.charAt(i + 1)) {\n    p.nsp = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' === c) break;\n      p.nsp += c;\n      if (i === str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  }\n\n  // look up id\n  var next = str.charAt(i + 1);\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n      p.id += str.charAt(i);\n      if (i === str.length) break;\n    }\n    p.id = Number(p.id);\n  }\n\n  // look up json data\n  if (str.charAt(++i)) {\n    p = tryParse(p, str.substr(i));\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\nfunction tryParse(p, str) {\n  try {\n    p.data = JSON.parse(str);\n  } catch(e){\n    return error();\n  }\n  return p; \n}\n\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function() {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n  this.buffers.push(binData);\n  if (this.buffers.length === this.reconPack.attachments) { // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n  return null;\n};\n\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\nBinaryReconstructor.prototype.finishedReconstruction = function() {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error() {\n  return {\n    type: exports.ERROR,\n    data: 'parser error'\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/socket.io-parser/index.js\n// module id = 6\n// module chunks = 0","// browser shim for xmlhttprequest module\n\nvar hasCORS = require('has-cors');\n\nmodule.exports = function (opts) {\n  var xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  var xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  var enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) { }\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) { }\n\n  if (!xdomain) {\n    try {\n      return new global[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\n    } catch (e) { }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/engine.io-client/lib/xmlhttprequest.js\n// module id = 7\n// module chunks = 0","/**\n * Module dependencies.\n */\n\nvar parser = require('engine.io-parser');\nvar Emitter = require('component-emitter');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Transport;\n\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport (opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n  this.forceNode = opts.forceNode;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n  this.localAddress = opts.localAddress;\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Transport.prototype);\n\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n\n/**\n * Opens the transport.\n *\n * @api public\n */\n\nTransport.prototype.open = function () {\n  if ('closed' === this.readyState || '' === this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nTransport.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\nTransport.prototype.send = function (packets) {\n  if ('open' === this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n\n/**\n * Called upon open\n *\n * @api private\n */\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\nTransport.prototype.onData = function (data) {\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n\n/**\n * Called with a decoded packet.\n */\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon close.\n *\n * @api private\n */\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/engine.io-client/lib/transport.js\n// module id = 8\n// module chunks = 0","/**\r\n * Parses an URI\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\r\n\r\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\r\nvar parts = [\r\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\r\n];\r\n\r\nmodule.exports = function parseuri(str) {\r\n    var src = str,\r\n        b = str.indexOf('['),\r\n        e = str.indexOf(']');\r\n\r\n    if (b != -1 && e != -1) {\r\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\r\n    }\r\n\r\n    var m = re.exec(str || ''),\r\n        uri = {},\r\n        i = 14;\r\n\r\n    while (i--) {\r\n        uri[parts[i]] = m[i] || '';\r\n    }\r\n\r\n    if (b != -1 && e != -1) {\r\n        uri.source = src;\r\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\r\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\r\n        uri.ipv6uri = true;\r\n    }\r\n\r\n    return uri;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/parseuri/index.js\n// module id = 9\n// module chunks = 0","/* global Blob File */\n\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof global.Blob === 'function' || toString.call(global.Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof global.File === 'function' || toString.call(global.File) === '[object FileConstructor]';\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Supports Buffer, ArrayBuffer, Blob and File.\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary (obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n\n  if (isArray(obj)) {\n    for (var i = 0, l = obj.length; i < l; i++) {\n      if (hasBinary(obj[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  if ((typeof global.Buffer === 'function' && global.Buffer.isBuffer && global.Buffer.isBuffer(obj)) ||\n     (typeof global.ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||\n     (withNativeBlob && obj instanceof Blob) ||\n     (withNativeFile && obj instanceof File)\n    ) {\n    return true;\n  }\n\n  // see: https://github.com/Automattic/has-binary/pull/4\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n    return hasBinary(obj.toJSON(), true);\n  }\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/has-binary2/index.js\n// module id = 10\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/isarray/index.js\n// module id = 11\n// module chunks = 0","\nmodule.exports = isBuf;\n\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return (global.Buffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/socket.io-parser/is-buffer.js\n// module id = 12\n// module chunks = 0","\n/**\n * Module dependencies.\n */\n\nvar eio = require('engine.io-client');\nvar Socket = require('./socket');\nvar Emitter = require('component-emitter');\nvar parser = require('socket.io-parser');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:manager');\nvar indexOf = require('indexof');\nvar Backoff = require('backo2');\n\n/**\n * IE6+ hasOwnProperty\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager (uri, opts) {\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && ('object' === typeof uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n  var _parser = opts.parser || parser;\n  this.encoder = new _parser.Encoder();\n  this.decoder = new _parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function () {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\nManager.prototype.updateSocketIds = function () {\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.generateId(nsp);\n    }\n  }\n};\n\n/**\n * generate `socket.id` for the given `nsp`\n *\n * @param {String} nsp\n * @return {String}\n * @api private\n */\n\nManager.prototype.generateId = function (nsp) {\n  return (nsp === '/' ? '' : (nsp + '#')) + this.engine.id;\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function (v) {\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function (v) {\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function (v) {\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function (v) {\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function (v) {\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function (v) {\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function () {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open =\nManager.prototype.connect = function (fn, opts) {\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false;\n\n  // emit `open`\n  var openSub = on(socket, 'open', function () {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function (data) {\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout);\n\n    // set timer\n    var timer = setTimeout(function () {\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function () {\n  debug('open');\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\nManager.prototype.onping = function () {\n  this.lastPing = new Date();\n  this.emitAll('ping');\n};\n\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\nManager.prototype.onpong = function () {\n  this.emitAll('pong', new Date() - this.lastPing);\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function (data) {\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function (err) {\n  debug('error', err);\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function (nsp, opts) {\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp, opts);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function () {\n      socket.id = self.generateId(nsp);\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting event is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting () {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function (socket) {\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n\n  this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function (packet) {\n  debug('writing packet %j', packet);\n  var self = this;\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function (encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else { // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function () {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function () {\n  debug('cleanup');\n\n  var subsLength = this.subs.length;\n  for (var i = 0; i < subsLength; i++) {\n    var sub = this.subs.shift();\n    sub.destroy();\n  }\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close =\nManager.prototype.disconnect = function () {\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n  if ('opening' === this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function (reason) {\n  debug('onclose');\n\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function () {\n  if (this.reconnecting || this.skipReconnect) return this;\n\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n\n    this.reconnecting = true;\n    var timer = setTimeout(function () {\n      if (self.skipReconnect) return;\n\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts);\n\n      // check again for the case socket closed in above events\n      if (self.skipReconnect) return;\n\n      self.open(function (err) {\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function () {\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/socket.io-client/lib/manager.js\n// module id = 13\n// module chunks = 0","/**\n * Module dependencies\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar XHR = require('./polling-xhr');\nvar JSONP = require('./polling-jsonp');\nvar websocket = require('./websocket');\n\n/**\n * Export transports.\n */\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling (opts) {\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (global.location) {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/engine.io-client/lib/transports/index.js\n// module id = 14\n// module chunks = 0","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parseqs = require('parseqs');\nvar parser = require('engine.io-parser');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:polling');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Polling;\n\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = (function () {\n  var XMLHttpRequest = require('xmlhttprequest-ssl');\n  var xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\nfunction Polling (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(Polling, Transport);\n\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function () {\n  this.poll();\n};\n\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\nPolling.prototype.pause = function (onPause) {\n  var self = this;\n\n  this.readyState = 'pausing';\n\n  function pause () {\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function () {\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function () {\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\nPolling.prototype.poll = function () {\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\nPolling.prototype.onData = function (data) {\n  var self = this;\n  debug('polling got data %s', data);\n  var callback = function (packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' === self.readyState) {\n      self.onOpen();\n    }\n\n    // if its a close packet, we close the ongoing requests\n    if ('close' === packet.type) {\n      self.onClose();\n      return false;\n    }\n\n    // otherwise bypass onData and handle the message\n    self.onPacket(packet);\n  };\n\n  // decode payload\n  parser.decodePayload(data, this.socket.binaryType, callback);\n\n  // if an event did not trigger closing\n  if ('closed' !== this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' === this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function () {\n  var self = this;\n\n  function close () {\n    debug('writing close packet');\n    self.write([{ type: 'close' }]);\n  }\n\n  if ('open' === this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\nPolling.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n  var callbackfn = function () {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nPolling.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = '';\n\n  // cache busting is forced\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // avoid port if default for schema\n  if (this.port && (('https' === schema && Number(this.port) !== 443) ||\n     ('http' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/engine.io-client/lib/transports/polling.js\n// module id = 15\n// module chunks = 0","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/yeast/index.js\n// module id = 16\n// module chunks = 0","\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/indexof/index.js\n// module id = 17\n// module chunks = 0","\n/**\n * Module dependencies.\n */\n\nvar parser = require('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar toArray = require('to-array');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:socket');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket (io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n  if (this.io.autoConnect) this.open();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  if (this.subs) return;\n\n  var io = this.io;\n  this.subs = [\n    on(io, 'open', bind(this, 'onopen')),\n    on(io, 'packet', bind(this, 'onpacket')),\n    on(io, 'close', bind(this, 'onclose'))\n  ];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open =\nSocket.prototype.connect = function () {\n  if (this.connected) return this;\n\n  this.subEvents();\n  this.io.open(); // ensure open\n  if ('open' === this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var packet = { type: parser.EVENT, data: args };\n\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress;\n\n  // event ack callback\n  if ('function' === typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  delete this.flags;\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function () {\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' !== this.nsp) {\n    if (this.query) {\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\n      debug('sending connect packet with query %s', query);\n      this.packet({type: parser.CONNECT, query: query});\n    } else {\n      this.packet({type: parser.CONNECT});\n    }\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function (reason) {\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function (packet) {\n  if (packet.nsp !== this.nsp) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n\n    self.packet({\n      type: parser.ACK,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n  if ('function' === typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function () {\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function () {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close =\nSocket.prototype.disconnect = function () {\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({ type: parser.DISCONNECT });\n  }\n\n  // remove socket from pool\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.compress = function (compress) {\n  this.flags = this.flags || {};\n  this.flags.compress = compress;\n  return this;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/socket.io-client/lib/socket.js\n// module id = 18\n// module chunks = 0","\n/**\n * Module exports.\n */\n\nmodule.exports = on;\n\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on (obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function () {\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/socket.io-client/lib/on.js\n// module id = 19\n// module chunks = 0","/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/component-bind/index.js\n// module id = 20\n// module chunks = 0","import { iOptions, iCollectionItem, IDictionary, wsEvent, Observer, appEvent } from './interfaces';\nimport { Observable, Subject } from 'rxjs/Rx';\nimport * as io from 'socket.io-client';\n\n\nexport class DataManager {\n    private connection: string;\n    private authorized: boolean = false;\n    private isConnectionAlive: boolean;\n    private Socket: SocketIOClient.Socket;\n    public  defaultSocket: SocketIOClient.Socket;\n    private authToken: string;\n    private collSockets: IDictionary<SocketIOClient.Socket> = {};\n\n\n\n    private authObservable: Observable<wsEvent> = Observable.create(() => {});\n    private hydrateChatUnsub: Function;\n\n\n    private _masterHotObservable: Subject<wsEvent> = new Subject<wsEvent>();\n    private _masterColdObservable: Observable<wsEvent> = Observable.create(() => {});\n\n    public get masterObservable() {\n      return this._masterHotObservable;\n    }\n\n    constructor(private options: iOptions) {\n        this.connection = options.connection;\n        this.isConnectionAlive = false;\n        this.init();\n    }\n\n    private auth = () => {\n      function _authenticated(this: any, observer: Observer<wsEvent>, e: any) {\n        // if (e) {\n        //   this.authToken = e.token;\n        // }\n        // this.authorized = true;\n        const token = e.token;\n        this.collSockets['chatrooms'].emit('joinRooms', { token });\n        observer.next({\n          name: 'authenticated',\n          wsmessage: {\n            token\n          }\n        });\n        this._hydrateChatrooms();\n\n      }\n\n      function _unauthorized(this: any,observer: Observer<wsEvent>, e: Event) {\n        observer.next({\n          name: 'unauthorized'\n        })\n      }\n\n      function _handleSignUp(observer: Observer<wsEvent>, data: any) {\n        console.log(data, 'data');\n      }\n\n      const cs = this.collSockets;\n      const authSocket = io(`${this.connection}/auth`);\n      cs['auth'] = authSocket;\n      let observable = Observable.create((observer: Observer<wsEvent>) => {\n        authSocket.on('authenticated', _authenticated.bind(this, observer));\n        authSocket.on('unauthorized', _unauthorized.bind(this, observer));\n        authSocket.on('signup-response', _handleSignUp.bind(this, observer));\n      });\n\n      return observable;\n    }\n    private roomInit = () => {\n      this.collSockets['chatrooms'] = io(`${this.connection}/chatrooms`);\n      let observable = Observable.create((observer: Observer<wsEvent>) => {\n        this.collSockets['chatrooms'].on('message', this._message.bind(this, observer));\n      });\n      return observable;\n\n    }\n    private init = (): void => {\n      this.Socket = io(`${this.connection}/`);\n      let observable = Observable.create((observer: Observer<wsEvent>) => {\n        this.Socket.on('message', this._message.bind(this, observer));\n        this.Socket.on('connect', this._connect.bind(this, observer));\n        this.Socket.on('disconnect', this._disconnect.bind(this, observer));\n        this.Socket.on('reconnect_attempt', this._reconnectAttempt.bind(this, observer));\n        this.Socket.on('reconnect', this._reconnect.bind(this, observer));\n        this.Socket.on('reconnect_error', this._reconnectError.bind(this, observer));\n        this.Socket.on('reconnect_failed', this._reconnectFailed.bind(this, observer));\n      });\n      this._masterColdObservable = observable;\n\n      observable.subscribe(this._masterHotObservable);\n      this.roomInit().subscribe(this._masterHotObservable);\n      this.auth().subscribe(this._masterHotObservable);\n      // this.hydrateChatroomObservable.subscribe(this._masterHotObservable);\n      // this.collSockets['auth'].emit('authentication', {username: 'mpan', password: 'password3'});\n\n    }\n    _message = (observer: Observer<wsEvent>, data: any) => {\n      observer.next({\n        name: 'message',\n        wsmessage: data\n      });\n    }\n    _connect = (observer: Observer<wsEvent>) => {\n        this.isConnectionAlive = true;\n        observer.next({\n          name: 'connect'\n        })\n    }\n\n    _disconnect = (observer: Observer<wsEvent>) => {\n        observer.next({\n          name: 'disconnect'\n        })\n    }\n\n    _reconnectAttempt = (observer: Observer<wsEvent>) => {\n      observer.next({\n        name: 'reconnect attempt'\n      })\n\n    }\n\n    _reconnect = (observer: Observer<wsEvent>) => {\n      // this.collSockets['auth'].emit('authentication', { token: this.authToken });\n      observer.next({\n        name: 'reconnected'\n      })\n    }\n\n    _reconnectError = (observer: Observer<wsEvent>) => {\n      observer.next({\n        name: 'reconnect error'\n      })\n    }\n\n    _reconnectFailed = (observer: Observer<wsEvent>) => {\n      observer.next({\n        name: 'reconnect failed'\n      })\n    }\n\n\n    private _hydrateChatrooms = () => {\n      this.publish('chatrooms', 'hydrateChatrooms');\n      let observable = Observable.create((observer: Observer<wsEvent>) => {\n        this.collSockets['chatrooms'].once('hydrateChatrooms', (payload: any) => {\n          observer.next({\n            name: 'chatroom-hydration',\n            wsmessage: payload\n          });\n        })\n      });\n      observable.subscribe(this._masterHotObservable);\n    }\n    public login = (username: string, password: string) => {\n      this.collSockets['auth'].emit('authentication', {username, password});\n    }\n    public relogin = (token: string) => {\n      this.collSockets['auth'].emit('authentication', {token})\n    }\n    public logout = () => {\n      // this.authToken = null;\n      // this.authorized = false;\n      let observable = Observable.create((observer: Observer<appEvent>) => {\n        observer.next({\n          name: 'logout'\n        })\n      });\n      observable.subscribe(this._masterHotObservable);\n    }\n    public publish = (socket: string, endpoint: string, data?:any, isPublic?: boolean): void => {\n      // let payload = {\n      //   ...data, token: this.authToken\n      // }\n        if (this.isConnectionAlive && ((data && data.token) || !!isPublic)) {\n            this.collSockets[socket].emit(endpoint, data);\n        } else if (!this.isConnectionAlive && data.token) {\n            saveToLocalStorage(socket, endpoint, data)\n        }\n    }\n    public signUp = ({username, password, email, firstName, lastName}: any) => {\n      this.publish('auth', 'signup', {\n        username,\n        password,\n        email,\n        firstName,\n        lastName\n      }, true);\n    }\n    public createRoom = (): void => {\n\n    }\n    public joinRoom = (): void => {\n\n    }\n}\n\nfunction saveToLocalStorage(socket: string, endpoint: string, data: any) {\n    let savedData = getFromLocalStorage(endpoint);\n    let ls = savedData || [];\n    ls.push(data);\n    localStorage.setItem(endpoint, JSON.stringify(ls));\n}\n\nfunction clearCollection(collection: string) {\n    localStorage.setItem(collection, null);\n}\n\nfunction getFromLocalStorage(collection: string) {\n    return JSON.parse(localStorage.getItem(collection));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./index.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_22__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs\"\n// module id = 22\n// module chunks = 0","\n/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar parser = require('socket.io-parser');\nvar Manager = require('./manager');\nvar debug = require('debug')('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup (uri, opts) {\n  if (typeof uri === 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] ||\n                      false === opts.multiplex || sameNamespace;\n\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n  if (parsed.query && !opts.query) {\n    opts.query = parsed.query;\n  }\n  return io.socket(parsed.path, opts);\n}\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/socket.io-client/lib/index.js\n// module id = 23\n// module chunks = 0","\n/**\n * Module dependencies.\n */\n\nvar parseuri = require('parseuri');\nvar debug = require('debug')('socket.io-client:url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = url;\n\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url (uri, loc) {\n  var obj = uri;\n\n  // default to window.location\n  loc = loc || global.location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n  // relative path support\n  if ('string' === typeof uri) {\n    if ('/' === uri.charAt(0)) {\n      if ('/' === uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n      if ('undefined' !== typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    }\n\n    // parse\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  }\n\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n  // define unique id\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n  // define href\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\n\n  return obj;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/socket.io-client/lib/url.js\n// module id = 24\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/process/browser.js\n// module id = 25\n// module chunks = 0","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/debug/src/debug.js\n// module id = 26\n// module chunks = 0","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/ms/index.js\n// module id = 27\n// module chunks = 0","/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof global.Blob === 'function' || toString.call(global.Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof global.File === 'function' || toString.call(global.File) === '[object FileConstructor]';\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet) {\n  var buffers = [];\n  var packetData = packet.data;\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData, buffers);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\nfunction _deconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (isBuf(data)) {\n    var placeholder = { _placeholder: true, num: buffers.length };\n    buffers.push(data);\n    return placeholder;\n  } else if (isArray(data)) {\n    var newData = new Array(data.length);\n    for (var i = 0; i < data.length; i++) {\n      newData[i] = _deconstructPacket(data[i], buffers);\n    }\n    return newData;\n  } else if (typeof data === 'object' && !(data instanceof Date)) {\n    var newData = {};\n    for (var key in data) {\n      newData[key] = _deconstructPacket(data[key], buffers);\n    }\n    return newData;\n  }\n  return data;\n}\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  packet.data = _reconstructPacket(packet.data, buffers);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\nfunction _reconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (data && data._placeholder) {\n    return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n  } else if (isArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      data[i] = _reconstructPacket(data[i], buffers);\n    }\n  } else if (typeof data === 'object') {\n    for (var key in data) {\n      data[key] = _reconstructPacket(data[key], buffers);\n    }\n  }\n\n  return data;\n}\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (typeof obj === 'object' && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/socket.io-parser/binary.js\n// module id = 28\n// module chunks = 0","\nmodule.exports = require('./socket');\n\n/**\n * Exports parser\n *\n * @api public\n *\n */\nmodule.exports.parser = require('engine.io-parser');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/engine.io-client/lib/index.js\n// module id = 29\n// module chunks = 0","/**\n * Module dependencies.\n */\n\nvar transports = require('./transports/index');\nvar Emitter = require('component-emitter');\nvar debug = require('debug')('engine.io-client:socket');\nvar index = require('indexof');\nvar parser = require('engine.io-parser');\nvar parseuri = require('parseuri');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket (uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n  opts = opts || {};\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure\n    : (global.location && 'https:' === location.protocol);\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname ||\n    (global.location ? location.hostname : 'localhost');\n  this.port = opts.port || (global.location && location.port\n      ? location.port\n      : (this.secure ? 443 : 80));\n  this.query = opts.query || {};\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.transportOptions = opts.transportOptions || {};\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.prevBufferLen = 0;\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  }\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n  this.forceNode = !!opts.forceNode;\n\n  // other options for Node.js client\n  var freeGlobal = typeof global === 'object' && global;\n  if (freeGlobal.global === freeGlobal) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n\n    if (opts.localAddress) {\n      this.localAddress = opts.localAddress;\n    }\n  }\n\n  // set on handshake\n  this.id = null;\n  this.upgrades = null;\n  this.pingInterval = null;\n  this.pingTimeout = null;\n\n  // set on heartbeat\n  this.pingIntervalTimer = null;\n  this.pingTimeoutTimer = null;\n\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports/index');\nSocket.parser = require('engine.io-parser');\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // per-transport options\n  var options = this.transportOptions[name] || {};\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n\n  var transport = new transports[name]({\n    query: query,\n    socket: this,\n    agent: options.agent || this.agent,\n    hostname: options.hostname || this.hostname,\n    port: options.port || this.port,\n    secure: options.secure || this.secure,\n    path: options.path || this.path,\n    forceJSONP: options.forceJSONP || this.forceJSONP,\n    jsonp: options.jsonp || this.jsonp,\n    forceBase64: options.forceBase64 || this.forceBase64,\n    enablesXDR: options.enablesXDR || this.enablesXDR,\n    timestampRequests: options.timestampRequests || this.timestampRequests,\n    timestampParam: options.timestampParam || this.timestampParam,\n    policyPort: options.policyPort || this.policyPort,\n    pfx: options.pfx || this.pfx,\n    key: options.key || this.key,\n    passphrase: options.passphrase || this.passphrase,\n    cert: options.cert || this.cert,\n    ca: options.ca || this.ca,\n    ciphers: options.ciphers || this.ciphers,\n    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\n    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\n    extraHeaders: options.extraHeaders || this.extraHeaders,\n    forceNode: options.forceNode || this.forceNode,\n    localAddress: options.localAddress || this.localAddress,\n    requestTimeout: options.requestTimeout || this.requestTimeout,\n    protocols: options.protocols || void (0)\n  });\n\n  return transport;\n};\n\nfunction clone (obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function () {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function (transport) {\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport\n  .on('drain', function () {\n    self.onDrain();\n  })\n  .on('packet', function (packet) {\n    self.onPacket(packet);\n  })\n  .on('error', function (e) {\n    self.onError(e);\n  })\n  .on('close', function () {\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, { probe: 1 });\n  var failed = false;\n  var self = this;\n\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen () {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{ type: 'ping', data: 'probe' }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' === msg.type && 'probe' === msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' === self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n\n          cleanup();\n\n          self.setTransport(transport);\n          transport.send([{ type: 'upgrade' }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport () {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n\n    cleanup();\n\n    transport.close();\n    transport = null;\n  }\n\n  // Handle any error that happens while probing\n  function onerror (err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n\n    freezeTransport();\n\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose () {\n    onerror('transport closed');\n  }\n\n  // When the socket is closed while we're probing\n  function onclose () {\n    onerror('socket closed');\n  }\n\n  // When the socket is upgraded while we're probing\n  function onupgrade (to) {\n    if (transport && to.name !== transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  }\n\n  // Remove all listeners on the transport and on self\n  function cleanup () {\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n\n  transport.open();\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' === this.readyState || 'open' === this.readyState ||\n      'closing' === this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(JSON.parse(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if ('closed' === this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' === self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || (self.pingInterval + self.pingTimeout));\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function () {\n    self.emit('ping');\n  });\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function () {\n  this.writeBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' !== this.readyState && this.transport.writable &&\n    !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write =\nSocket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' === typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing';\n\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function () {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close () {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose () {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade () {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n\n    // clean buffers after, so users can still\n    // grab the buffers on `close` event\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/engine.io-client/lib/socket.js\n// module id = 30\n// module chunks = 0","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/has-cors/index.js\n// module id = 31\n// module chunks = 0","/**\n * Module requirements.\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar Polling = require('./polling');\nvar Emitter = require('component-emitter');\nvar inherit = require('component-inherit');\nvar debug = require('debug')('engine.io-client:polling-xhr');\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n/**\n * Empty function\n */\n\nfunction empty () {}\n\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction XHR (opts) {\n  Polling.call(this, opts);\n  this.requestTimeout = opts.requestTimeout;\n  this.extraHeaders = opts.extraHeaders;\n\n  if (global.location) {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = opts.hostname !== global.location.hostname ||\n      port !== opts.port;\n    this.xs = opts.secure !== isSSL;\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling);\n\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function (opts) {\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  opts.requestTimeout = this.requestTimeout;\n\n  // other options for Node.js client\n  opts.extraHeaders = this.extraHeaders;\n\n  return new Request(opts);\n};\n\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\nXHR.prototype.doWrite = function (data, fn) {\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function (err) {\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nXHR.prototype.doPoll = function () {\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function (data) {\n    self.onData(data);\n  });\n  req.on('error', function (err) {\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Request (opts) {\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined !== opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n  this.requestTimeout = opts.requestTimeout;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n\n  this.create();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function () {\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n\n    if ('POST' === this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    try {\n      xhr.setRequestHeader('Accept', '*/*');\n    } catch (e) {}\n\n    // ie6 check\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    if (this.requestTimeout) {\n      xhr.timeout = this.requestTimeout;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function () {\n        self.onLoad();\n      };\n      xhr.onerror = function () {\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 2) {\n          var contentType;\n          try {\n            contentType = xhr.getResponseHeader('Content-Type');\n          } catch (e) {}\n          if (contentType === 'application/octet-stream') {\n            xhr.responseType = 'arraybuffer';\n          }\n        }\n        if (4 !== xhr.readyState) return;\n        if (200 === xhr.status || 1223 === xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function () {\n            self.onError(xhr.status);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function () {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (global.document) {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function () {\n  this.emit('success');\n  this.cleanup();\n};\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function (data) {\n  this.emit('data', data);\n  this.onSuccess();\n};\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function (err) {\n  this.emit('error', err);\n  this.cleanup(true);\n};\n\n/**\n * Cleans up house.\n *\n * @api private\n */\n\nRequest.prototype.cleanup = function (fromError) {\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\n    return;\n  }\n  // xmlhttprequest\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch (e) {}\n  }\n\n  if (global.document) {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function () {\n  var data;\n  try {\n    var contentType;\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type');\n    } catch (e) {}\n    if (contentType === 'application/octet-stream') {\n      data = this.xhr.response || this.xhr.responseText;\n    } else {\n      data = this.xhr.responseText;\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n  if (null != data) {\n    this.onData(data);\n  }\n};\n\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\nRequest.prototype.hasXDR = function () {\n  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n};\n\n/**\n * Aborts the request.\n *\n * @api public\n */\n\nRequest.prototype.abort = function () {\n  this.cleanup();\n};\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (global.document) {\n  if (global.attachEvent) {\n    global.attachEvent('onunload', unloadHandler);\n  } else if (global.addEventListener) {\n    global.addEventListener('beforeunload', unloadHandler, false);\n  }\n}\n\nfunction unloadHandler () {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/engine.io-client/lib/transports/polling-xhr.js\n// module id = 32\n// module chunks = 0","\n/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\n\nmodule.exports = Object.keys || function keys (obj){\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n  return arr;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/engine.io-parser/lib/keys.js\n// module id = 33\n// module chunks = 0","/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\n\nmodule.exports = function(arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\n  if (start < 0) { start += bytes; }\n  if (end < 0) { end += bytes; }\n  if (end > bytes) { end = bytes; }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n  return result.buffer;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/arraybuffer.slice/index.js\n// module id = 34\n// module chunks = 0","module.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/after/index.js\n// module id = 35\n// module chunks = 0","/*! https://mths.be/utf8js v2.1.2 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint, strict) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tif (strict) {\n\t\t\t\tthrow Error(\n\t\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t\t' is not a scalar value'\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint, strict) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tif (!checkScalarValue(codePoint, strict)) {\n\t\t\t\tcodePoint = 0xFFFD;\n\t\t\t}\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string, opts) {\n\t\topts = opts || {};\n\t\tvar strict = false !== opts.strict;\n\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint, strict);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol(strict) {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\treturn checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString, opts) {\n\t\topts = opts || {};\n\t\tvar strict = false !== opts.strict;\n\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol(strict)) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar utf8 = {\n\t\t'version': '2.1.2',\n\t\t'encode': utf8encode,\n\t\t'decode': utf8decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn utf8;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = utf8;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tvar object = {};\n\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\tfor (var key in utf8) {\n\t\t\t\thasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.utf8 = utf8;\n\t}\n\n}(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/engine.io-parser/lib/utf8.js\n// module id = 36\n// module chunks = 0","module.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif(!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/webpack/buildin/module.js\n// module id = 37\n// module chunks = 0","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(){\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n  // Use a lookup table to find the index.\n  var lookup = new Uint8Array(256);\n  for (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i+1)];\n      encoded3 = lookup[base64.charCodeAt(i+2)];\n      encoded4 = lookup[base64.charCodeAt(i+3)];\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/base64-arraybuffer/lib/base64-arraybuffer.js\n// module id = 38\n// module chunks = 0","/**\n * Create a blob builder even when vendor prefixes exist\n */\n\nvar BlobBuilder = global.BlobBuilder\n  || global.WebKitBlobBuilder\n  || global.MSBlobBuilder\n  || global.MozBlobBuilder;\n\n/**\n * Check if Blob constructor is supported\n */\n\nvar blobSupported = (function() {\n  try {\n    var a = new Blob(['hi']);\n    return a.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if Blob constructor supports ArrayBufferViews\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\n */\n\nvar blobSupportsArrayBufferView = blobSupported && (function() {\n  try {\n    var b = new Blob([new Uint8Array([1,2])]);\n    return b.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if BlobBuilder is supported\n */\n\nvar blobBuilderSupported = BlobBuilder\n  && BlobBuilder.prototype.append\n  && BlobBuilder.prototype.getBlob;\n\n/**\n * Helper function that maps ArrayBufferViews to ArrayBuffers\n * Used by BlobBuilder constructor and old browsers that didn't\n * support it in the Blob constructor.\n */\n\nfunction mapArrayBufferViews(ary) {\n  for (var i = 0; i < ary.length; i++) {\n    var chunk = ary[i];\n    if (chunk.buffer instanceof ArrayBuffer) {\n      var buf = chunk.buffer;\n\n      // if this is a subarray, make a copy so we only\n      // include the subarray region from the underlying buffer\n      if (chunk.byteLength !== buf.byteLength) {\n        var copy = new Uint8Array(chunk.byteLength);\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n        buf = copy.buffer;\n      }\n\n      ary[i] = buf;\n    }\n  }\n}\n\nfunction BlobBuilderConstructor(ary, options) {\n  options = options || {};\n\n  var bb = new BlobBuilder();\n  mapArrayBufferViews(ary);\n\n  for (var i = 0; i < ary.length; i++) {\n    bb.append(ary[i]);\n  }\n\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\n};\n\nfunction BlobConstructor(ary, options) {\n  mapArrayBufferViews(ary);\n  return new Blob(ary, options || {});\n};\n\nmodule.exports = (function() {\n  if (blobSupported) {\n    return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;\n  } else if (blobBuilderSupported) {\n    return BlobBuilderConstructor;\n  } else {\n    return undefined;\n  }\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/blob/index.js\n// module id = 39\n// module chunks = 0","\n/**\n * Module requirements.\n */\n\nvar Polling = require('./polling');\nvar inherit = require('component-inherit');\n\n/**\n * Module exports.\n */\n\nmodule.exports = JSONPPolling;\n\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n\n/**\n * Noop.\n */\n\nfunction empty () { }\n\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\nfunction JSONPPolling (opts) {\n  Polling.call(this, opts);\n\n  this.query = this.query || {};\n\n  // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    if (!global.___eio) global.___eio = [];\n    callbacks = global.___eio;\n  }\n\n  // callback identifier\n  this.index = callbacks.length;\n\n  // add callback to jsonp global\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  });\n\n  // append to query string\n  this.query.j = this.index;\n\n  // prevent spurious errors from being emitted when the window is unloaded\n  if (global.document && global.addEventListener) {\n    global.addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(JSONPPolling, Polling);\n\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n  script.onerror = function (e) {\n    self.onError('jsonp poll error', e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n  if (insertAt) {\n    insertAt.parentNode.insertBefore(script, insertAt);\n  } else {\n    (document.head || document.body).appendChild(script);\n  }\n  this.script = script;\n\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete () {\n    initIframe();\n    fn();\n  }\n\n  function initIframe () {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe();\n\n  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch (e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function () {\n      if (self.iframe.readyState === 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/engine.io-client/lib/transports/polling-jsonp.js\n// module id = 40\n// module chunks = 0","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parser = require('engine.io-parser');\nvar parseqs = require('parseqs');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:websocket');\nvar BrowserWebSocket = global.WebSocket || global.MozWebSocket;\nvar NodeWebSocket;\nif (typeof window === 'undefined') {\n  try {\n    NodeWebSocket = require('ws');\n  } catch (e) { }\n}\n\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\nvar WebSocket = BrowserWebSocket;\nif (!WebSocket && typeof window === 'undefined') {\n  WebSocket = NodeWebSocket;\n}\n\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n  this.perMessageDeflate = opts.perMessageDeflate;\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\n  this.protocols = opts.protocols;\n  if (!this.usingBrowserWebSocket) {\n    WebSocket = NodeWebSocket;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport);\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function () {\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var uri = this.uri();\n  var protocols = this.protocols;\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate\n  };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n  if (this.localAddress) {\n    opts.localAddress = this.localAddress;\n  }\n\n  try {\n    this.ws = this.usingBrowserWebSocket ? (protocols ? new WebSocket(uri, protocols) : new WebSocket(uri)) : new WebSocket(uri, protocols, opts);\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'nodebuffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function () {\n  var self = this;\n\n  this.ws.onopen = function () {\n    self.onOpen();\n  };\n  this.ws.onclose = function () {\n    self.onClose();\n  };\n  this.ws.onmessage = function (ev) {\n    self.onData(ev.data);\n  };\n  this.ws.onerror = function (e) {\n    self.onError('websocket error', e);\n  };\n};\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n\n  // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n  var total = packets.length;\n  for (var i = 0, l = total; i < l; i++) {\n    (function (packet) {\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\n        if (!self.usingBrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' === typeof data ? global.Buffer.byteLength(data) : data.length;\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n        try {\n          if (self.usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done () {\n    self.emit('flush');\n\n    // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n    setTimeout(function () {\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function () {\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function () {\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = '';\n\n  // avoid port if default for schema\n  if (this.port && (('wss' === schema && Number(this.port) !== 443) ||\n    ('ws' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\nWS.prototype.check = function () {\n  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/engine.io-client/lib/transports/websocket.js\n// module id = 41\n// module chunks = 0","module.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/to-array/index.js\n// module id = 43\n// module chunks = 0","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/backo2/index.js\n// module id = 44\n// module chunks = 0"],"sourceRoot":""}